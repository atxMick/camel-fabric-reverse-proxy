<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.0.0.xsd">

	<cm:property-placeholder persistent-id="com.redhat.cigna.httpgateway">
		<cm:default-properties>
			<!-- jetty ssl configuration  -->
			<cm:property name="gateway.server.bind.address" value="0.0.0.0" />
			<cm:property name="gateway.server.bind.address.port" value="9000" />
			<!-- <cm:property name="gateway.server.keystore.target.location" value="${keystore.path}" /> -->
			<cm:property name="gateway.server.keystore.target.location" value="/home/mcostell" />
			<cm:property name="gateway.server.keystore.filename" value="keystore.jks" />
			<cm:property name="gateway.server.truststore.filename" value="cacerts.jks" />
			<cm:property name="gateway.server.keystore.password" value="0r1g4m1C0ff33cup" />
			<cm:property name="gateway.server.truststore.password" value="0r1g4m1C0ff33cup" />
			<cm:property name="gateway.server.client.auth.needed" value="false" />
			<cm:property name="gateway.placeholder.algorithm" value="PBEWithMD5AndDES" />
		</cm:default-properties>
	</cm:property-placeholder>
	<!-- wire up jetty for ssl -->
	<bean id="jetty" class="org.apache.camel.component.jetty.JettyHttpComponent">
        <property name="sslSocketConnectorProperties">
            <map>
                <entry key="password" value="${gateway.server.keystore.password}"/>
                <entry key="keyPassword" value="${gateway.server.keystore.password}"/>
                <entry key="keystore" value="${gateway.server.keystore.target.location}/${gateway.server.keystore.filename}"/>
                <!-- mcostell for mutual auth -->
                <!--  -<enntry key="truststore" value="etc/certs/truststore.jks"/>
                <entry key="trustPassword" value="trust123"/> -->
                <entry key="needClientAuth" value="${gateway.server.client.auth.needed}"/>
            </map>
        </property>
    </bean>
	
	<!-- mcostell recipient creator bean -->
    <bean id="recipientCreator" class="com.redhat.httpgateway.Router"/>
	
	<camelContext id="httpGatewayContext" xmlns="http://camel.apache.org/schema/blueprint" autoStartup="true">
         <onException>
		    <exception>java.lang.Exception</exception>
		    <redeliveryPolicy maximumRedeliveries="1" />
		    <handled>
		      <constant>true</constant>
		    </handled>
		    <setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
		    	<constant>404</constant> 
		    </setHeader>
		    <!-- mcostell this will deliver the http response back -->
		    <transform>
		    	<simple>Unable to Lookup Endpoint</simple>
		    </transform>
	    </onException>
        <route id="HttpProxyRoute">
            <from uri="jetty:https://{{gateway.server.bind.address}}:{{gateway.server.bind.address.port}}?matchOnUriPrefix=true&amp;bridgeEndpoint=true"/>
            <log message="Going to send to ${header.recipientList}" />
            <setHeader headerName="recipientList">
                <method ref="recipientCreator" method="routePlease" />
            </setHeader>
            <removeHeader headerName="Host" />
            <recipientList>
                <simple>${header.recipientList}</simple>
            </recipientList>

        </route>


        <!-- endpoints exposed in fabric-->
        <route id="testRoute" autoStartup="true">
            <from uri="fabric:gatewaytest:cxfrs:http://0.0.0.0:9001/?resourceClasses=com.redhat.httpgateway.TestCxfRsResource"/>
            <log message="wooHoo!! did the routing correctly! for /test" />
            <transform>
                <constant>Test called successfully</constant>
            </transform>
        </route>
        <route id="cheeseRoute" autoStartup="true">
            <from uri="fabric:gatewaycheese:cxfrs:http://0.0.0.0:9002/?resourceClasses=com.redhat.httpgateway.CheeseCxfRsResource"/>
            <log message="wooHoo!! did the routing correctly! for /cheese" />
            <transform>
                <constant>Cheese called successfully</constant>
            </transform>
        </route>
        <route id="beerRoute" autoStartup="true">
            <from uri="fabric:gatewaybeer:cxfrs:http://0.0.0.0:9003/?resourceClasses=com.redhat.httpgateway.BeerCxfRsResource"/>
            <log message="wooHoo!! did the routing correctly! for /beer" />
            <transform>
                <constant>Beer called successfully</constant>
            </transform>
        </route>
    </camelContext>


		
</blueprint>